from aiogram import types
from misc import dp, bot
from .sqlit import cheak_traf,reg_user,cheak_chat_id

reg_user(1,1)

list_channel = cheak_traf()
name_channel_1 = list_channel[0]
name_channel_2 = list_channel[1]
name_channel_3 = list_channel[2]
name_channel_4 = list_channel[3]
name_channel_5 = list_channel[4]

def obnovlenie():
    global name_channel_1,name_channel_2,name_channel_3,name_channel_4,name_channel_5
    list_channel = cheak_traf()
    name_channel_1 = list_channel[0]
    name_channel_2 = list_channel[1]
    name_channel_3 = list_channel[2]
    name_channel_4 = list_channel[3]
    name_channel_5 = list_channel[4]


@dp.callback_query_handler(text_startswith='start_watch')  # –ù–∞–∂–∞–ª –∫–Ω–æ–ø–∫—É –ù–∞—á–∞—Ç—å —Å–º–æ—Ç—Ä–µ—Ç—å
async def start_watch(call: types.callback_query):

    markup = types.InlineKeyboardMarkup()
    bat_a = types.InlineKeyboardButton(text='–û–¢–ö–†–´–¢–¨ –î–û–°–¢–£–ü‚úÖ', callback_data=f'check')
    markup.add(bat_a)

    await bot.send_message(call.message.chat.id, f"""<b>‚ö†Ô∏è –î–û–°–¢–£–ü –ó–ê–ö–†–´–¢</b>

‚öôÔ∏è–î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Ñ–∏–ª—å–º–æ–≤ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –Ω–∏–∂–µ —É–∫–∞–∑–∞–Ω–Ω—ã–µ –∫–∞–Ω–∞–ª—ã

üìç–ü–æ—Å–ª–µ —ç—Ç–æ–≥–æ –∂–º–∏ –∫–Ω–æ–ø–∫—É ¬´–û–¢–ö–†–´–¢–¨ –î–û–°–¢–£–ü¬ª

<b>–ö–∞–Ω–∞–ª 1</b> - {name_channel_1}
<b>–ö–∞–Ω–∞–ª 2</b> - {name_channel_2}
<b>–ö–∞–Ω–∞–ª 3</b> - {name_channel_3}
<b>–ö–∞–Ω–∞–ª 4</b> - {name_channel_4}
<b>–ö–∞–Ω–∞–ª 5</b> - {name_channel_5}""", parse_mode='html',reply_markup=markup,disable_web_page_preview=True)




@dp.callback_query_handler(text_startswith='check')  # –ù–∞–∂–∞–ª –∫–Ω–æ–ø–∫—É –Ø –ü–û–î–ü–ò–°–ê–õ–°–Ø. –î–ï–õ–ê–ï–ú –ü–†–û–í–ï–†–ö–£
async def check(call: types.callback_query):
    await bot.send_message(call.message.chat.id, '‚è≥ –û–∂–∏–¥–∞–π—Ç–µ. –ò–¥—ë—Ç –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–ø–∏—Å–∫–∏.')
    name_channel = call.data[5:]
    id_list = cheak_chat_id()

    try:
        proverka1 = (await bot.get_chat_member(chat_id=id_list[0], user_id=call.message.chat.id)).status
    except:
        proverka1 = 'member'

    try:
        proverka2 = (await bot.get_chat_member(chat_id=id_list[1], user_id=call.message.chat.id)).status
    except:
        proverka2 = 'member'

    try:
        proverka3 = (await bot.get_chat_member(chat_id=id_list[2], user_id=call.message.chat.id)).status
    except:
        proverka3 = 'member'

    try:
        proverka4 = (await bot.get_chat_member(chat_id=id_list[3], user_id=call.message.chat.id)).status
    except:
        proverka4 = 'member'

    try:
        proverka5 = (await bot.get_chat_member(chat_id=id_list[4], user_id=call.message.chat.id)).status
    except:
        proverka5 = 'member'

    markup = types.InlineKeyboardMarkup()
    bat_a = types.InlineKeyboardButton(text='–û–¢–ö–†–´–¢–¨ –î–û–°–¢–£–ü‚úÖ', callback_data=f'check{name_channel}')
    markup.add(bat_a)

    if (proverka1 == 'member' and proverka2 == 'member' and proverka3 == 'member' and proverka4 == 'member' and proverka5 == 'member') or proverka1 == 'administrator' or proverka2 == 'administrator' or proverka3 == 'administrator' or proverka1 == 'creator' or proverka2 == 'creator' or proverka3 == 'creator' or proverka4 == 'administrator' or proverka4 == 'creator' or proverka5 == 'administrator' or proverka5 == 'creator': #–ß–µ–ª–æ–≤–µ–∫ –ø—Ä–æ—à–µ–ª –≤—Å–µ 2 –ø—Ä–æ–≤–µ—Ä–∫–∏
        markup_2 = types.InlineKeyboardMarkup()
        list = cheak_traf()  #–ü–û–õ–£–ß–ê–ï–¢ –õ–ò–°–¢
        bat_b = types.InlineKeyboardButton(text='ü•§–í–°–¢–£–ü–ò–¢–¨ü•§',url=f'{list[5]}')  # C—Å—ã–ª–∫–∞ –Ω–∞ –ø—Ä–∏–≤–∞—Ç –∫–∞–Ω–∞–ª # –í–ê–ñ–ù–û!!!!!
        markup_2.add(bat_b)
        await bot.send_message(call.message.chat.id, '‚úÖ –î–û–°–¢–£–ü –û–¢–ö–†–´–¢\n\n'
                                                         '–í—Å–µ —Ñ–∏–ª—å–º—ã –∑–∞–≥—Ä—É–∑–∏–ª–∏ –Ω–∞ –Ω–∞—à <b>–æ—Å–Ω–æ–≤–Ω–æ–π –∫–∞–Ω–∞–ª üëá</b>',parse_mode='html', reply_markup=markup_2)



    else:
        await bot.send_message(call.message.chat.id, '‚ùå–í—ã –Ω–µ –ø–æ–¥–ø–∏—Å–∞–ª–∏—Å—å –Ω–∞ –∫–∞–Ω–∞–ª—ã –Ω–∏–∂–µ\n\n'
                                                     '–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–ø–∏—Å–∫—É –Ω–∞ –≤—Å–µ –∫–∞–Ω–∞–ª—ã. –ò –∑–∞—Ç–µ–º –∂–º–∏ –∫–Ω–æ–ø–∫—É <b>–û–¢–ö–†–´–¢–¨ –î–û–°–¢–£–ü‚úÖ</b> –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏!\n\n'
                                                     f'<b>–ö–∞–Ω–∞–ª 1</b> - {name_channel_1}\n'
                                                     f'<b>–ö–∞–Ω–∞–ª 2</b> - {name_channel_2}\n'
                                                     f'<b>–ö–∞–Ω–∞–ª 3</b> - {name_channel_3}\n'
                                                     f'<b>–ö–∞–Ω–∞–ª 4</b> - {name_channel_4}\n'
                                                     f'<b>–ö–∞–Ω–∞–ª 5</b> - {name_channel_5}',parse_mode='html',reply_markup=markup,disable_web_page_preview=True)